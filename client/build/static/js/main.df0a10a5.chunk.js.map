{"version":3,"sources":["Logo.png","landing.js","Analysis.js","PlaylistList.js","Dashboard.js","useAuth.js","App.js","index.js"],"names":["Login","className","Card","src","logo","style","height","href","Button","Analysis","artistCounts","albumCounts","tagCounts","data","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","defs","id","type","background","color","size","padding","stagger","rotation","lineWidth","spacing","fill","match","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","PlaylistList","playlist","getArtistCounts","getAlbumCounts","getTagCounts","showHide","useState","userPlaylistTracks","getUserPlaylistTracks","trigger2","startTrigger2","spotifyApi","SpotifyWebApi","clientId","accessToken","localStorage","getItem","setAccessToken","tempArtistArray","tempAlbumsArray","tempTagsArray","trackMetadata","a","getPlaylistTracks","then","userTracks","body","items","map","tracks","tagFunction","axios","get","encodeURIComponent","track","album","artists","name","res","toptags","tag","catch","err","tagReturner","artist","artistID","Promise","all","values","useEffect","tempArtistCounts","reduce","c","key","console","log","reconstructArtists","tempAlbumCounts","reconstructAlbums","tempTagCounts","reconstructTags","object","Object","entries","value","push","onClick","trackNum","Dashboard","code","refreshToken","setRefreshToken","expiresIn","setExpiresIn","post","window","history","pushState","interval","setInterval","location","clearInterval","useAuth","playlistProps","getPlaylistProps","setShowHide","setItem","useRef","getUserPlaylists","url","total","toggleShowHide","URLSearchParams","search","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df0a10a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.8e2da956.png\";","import { Card, Button } from \"react-bootstrap\";\nimport \"./landing.css\";\nimport logo from \"./Logo.png\";\n\nconst AUTH_URL =\n  \"https://accounts.spotify.com/authorize?client_id=a3296c7d32264744a2a198e3ef62a255&response_type=code&redirect_uri=https://playlist-analyst.herokuapp.com&scope=user-top-read%20playlist-read-private%20user-read-private%20user-library-read%20playlist-read-collaborative\";\n\nfunction Login() {\n  return (\n    <div className=\"loginParent\">\n      <Card className=\"loginCard\">\n        <div className=\"loginCarddiv\">\n          <div className=\"cardContent\">\n            <img src={logo} style={{ height: \"80px\" }} />\n            <div className=\"loginPageText\">\n              Welcome to the Playlist Analyst <br /> Log in with Spotify to\n              analyze any of your playlists, and get breakdowns of the artists,\n              genres, moods and many more. This thing is in CLOSED ALPHA BRO!!!\n              Meaning it's ver unfinished. If you even know about the existence\n              of this it's cus you're a very special person. Su out.\n            </div>\n            <a href={AUTH_URL}>\n              <Button className=\"btn-login\">Login with Spotify</Button>\n            </a>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default Login;\n","import { Doughnut } from \"react-chartjs-2\";\nimport React, { useEffect, useState } from \"react\";\nimport { ResponsivePie } from \"@nivo/pie\";\n\nconst Analysis = ({ artistCounts, albumCounts, tagCounts }) => {\n  return (\n    <>\n      <div className=\"chartone\" style={{ height: 200 }}>\n        <ResponsivePie\n          data={artistCounts}\n          margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n          innerRadius={0.5}\n          padAngle={0.7}\n          cornerRadius={3}\n          activeOuterRadiusOffset={8}\n          borderWidth={1}\n          borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\n          arcLinkLabelsSkipAngle={10}\n          arcLinkLabelsTextColor=\"#333333\"\n          arcLinkLabelsThickness={2}\n          arcLinkLabelsColor={{ from: \"color\" }}\n          arcLabelsSkipAngle={10}\n          arcLabelsTextColor={{ from: \"color\", modifiers: [[\"darker\", 2]] }}\n          defs={[\n            {\n              id: \"dots\",\n              type: \"patternDots\",\n              background: \"inherit\",\n              color: \"rgba(255, 255, 255, 0.3)\",\n              size: 4,\n              padding: 1,\n              stagger: true,\n            },\n            {\n              id: \"lines\",\n              type: \"patternLines\",\n              background: \"inherit\",\n              color: \"rgba(255, 255, 255, 0.3)\",\n              rotation: -45,\n              lineWidth: 6,\n              spacing: 10,\n            },\n          ]}\n          fill={[\n            {\n              match: {\n                id: \"ruby\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"c\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"go\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"python\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"scala\",\n              },\n              id: \"lines\",\n            },\n            {\n              match: {\n                id: \"lisp\",\n              },\n              id: \"lines\",\n            },\n            {\n              match: {\n                id: \"elixir\",\n              },\n              id: \"lines\",\n            },\n            {\n              match: {\n                id: \"javascript\",\n              },\n              id: \"lines\",\n            },\n          ]}\n          legends={[\n            {\n              anchor: \"bottom\",\n              direction: \"row\",\n              justify: false,\n              translateX: 0,\n              translateY: 56,\n              itemsSpacing: 0,\n              itemWidth: 100,\n              itemHeight: 18,\n              itemTextColor: \"#999\",\n              itemDirection: \"left-to-right\",\n              itemOpacity: 1,\n              symbolSize: 18,\n              symbolShape: \"circle\",\n              effects: [\n                {\n                  on: \"hover\",\n                  style: {\n                    itemTextColor: \"#000\",\n                  },\n                },\n              ],\n            },\n          ]}\n        />\n      </div>\n      <div className=\"chartone\" style={{ height: 200 }}>\n        <ResponsivePie\n          data={albumCounts}\n          margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n          innerRadius={0.5}\n          padAngle={0.7}\n          cornerRadius={3}\n          activeOuterRadiusOffset={8}\n          borderWidth={1}\n          borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\n          arcLinkLabelsSkipAngle={10}\n          arcLinkLabelsTextColor=\"#333333\"\n          arcLinkLabelsThickness={2}\n          arcLinkLabelsColor={{ from: \"color\" }}\n          arcLabelsSkipAngle={10}\n          arcLabelsTextColor={{ from: \"color\", modifiers: [[\"darker\", 2]] }}\n          defs={[\n            {\n              id: \"dots\",\n              type: \"patternDots\",\n              background: \"inherit\",\n              color: \"rgba(255, 255, 255, 0.3)\",\n              size: 4,\n              padding: 1,\n              stagger: true,\n            },\n            {\n              id: \"lines\",\n              type: \"patternLines\",\n              background: \"inherit\",\n              color: \"rgba(255, 255, 255, 0.3)\",\n              rotation: -45,\n              lineWidth: 6,\n              spacing: 10,\n            },\n          ]}\n          fill={[\n            {\n              match: {\n                id: \"ruby\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"c\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"go\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"python\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"scala\",\n              },\n              id: \"lines\",\n            },\n            {\n              match: {\n                id: \"lisp\",\n              },\n              id: \"lines\",\n            },\n            {\n              match: {\n                id: \"elixir\",\n              },\n              id: \"lines\",\n            },\n            {\n              match: {\n                id: \"javascript\",\n              },\n              id: \"lines\",\n            },\n          ]}\n          legends={[\n            {\n              anchor: \"bottom\",\n              direction: \"row\",\n              justify: false,\n              translateX: 0,\n              translateY: 56,\n              itemsSpacing: 0,\n              itemWidth: 100,\n              itemHeight: 18,\n              itemTextColor: \"#999\",\n              itemDirection: \"left-to-right\",\n              itemOpacity: 1,\n              symbolSize: 18,\n              symbolShape: \"circle\",\n              effects: [\n                {\n                  on: \"hover\",\n                  style: {\n                    itemTextColor: \"#000\",\n                  },\n                },\n              ],\n            },\n          ]}\n        />\n      </div>\n\n      <div className=\"chartone\" style={{ height: 200 }}>\n        <ResponsivePie\n          data={tagCounts}\n          margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n          innerRadius={0.5}\n          padAngle={0.7}\n          cornerRadius={3}\n          activeOuterRadiusOffset={8}\n          borderWidth={1}\n          borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\n          arcLinkLabelsSkipAngle={10}\n          arcLinkLabelsTextColor=\"#333333\"\n          arcLinkLabelsThickness={2}\n          arcLinkLabelsColor={{ from: \"color\" }}\n          arcLabelsSkipAngle={10}\n          arcLabelsTextColor={{ from: \"color\", modifiers: [[\"darker\", 2]] }}\n          defs={[\n            {\n              id: \"dots\",\n              type: \"patternDots\",\n              background: \"inherit\",\n              color: \"rgba(255, 255, 255, 0.3)\",\n              size: 4,\n              padding: 1,\n              stagger: true,\n            },\n            {\n              id: \"lines\",\n              type: \"patternLines\",\n              background: \"inherit\",\n              color: \"rgba(255, 255, 255, 0.3)\",\n              rotation: -45,\n              lineWidth: 6,\n              spacing: 10,\n            },\n          ]}\n          fill={[\n            {\n              match: {\n                id: \"ruby\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"c\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"go\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"python\",\n              },\n              id: \"dots\",\n            },\n            {\n              match: {\n                id: \"scala\",\n              },\n              id: \"lines\",\n            },\n            {\n              match: {\n                id: \"lisp\",\n              },\n              id: \"lines\",\n            },\n            {\n              match: {\n                id: \"elixir\",\n              },\n              id: \"lines\",\n            },\n            {\n              match: {\n                id: \"javascript\",\n              },\n              id: \"lines\",\n            },\n          ]}\n          legends={[\n            {\n              anchor: \"bottom\",\n              direction: \"row\",\n              justify: false,\n              translateX: 0,\n              translateY: 56,\n              itemsSpacing: 0,\n              itemWidth: 100,\n              itemHeight: 18,\n              itemTextColor: \"#999\",\n              itemDirection: \"left-to-right\",\n              itemOpacity: 1,\n              symbolSize: 18,\n              symbolShape: \"circle\",\n              effects: [\n                {\n                  on: \"hover\",\n                  style: {\n                    itemTextColor: \"#000\",\n                  },\n                },\n              ],\n            },\n          ]}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Analysis;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport \"./PlaylistList.css\";\nimport { Card } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nexport default function PlaylistList({\n  playlist,\n  getArtistCounts,\n  getAlbumCounts,\n  getTagCounts,\n  showHide,\n}) {\n  const [userPlaylistTracks, getUserPlaylistTracks] = useState([]);\n  const [trigger2, startTrigger2] = useState(false);\n  const [trigger3, startTrigger3] = useState(false);\n\n  const spotifyApi = new SpotifyWebApi({\n    clientId: \"a3296c7d32264744a2a198e3ef62a255\",\n  });\n  const accessToken = localStorage.getItem(\"access\");\n  spotifyApi.setAccessToken(accessToken);\n\n  //Temp arrays\n  const tempArtistArray = [];\n  const tempAlbumsArray = [];\n  const tempTagsArray = [];\n\n  //Get data for songs from Spotify\n  const trackMetadata = async () => {\n    const accessToken = localStorage.getItem(\"access\");\n    spotifyApi.setAccessToken(accessToken);\n    if (!accessToken) return;\n    startTrigger2(!trigger2);\n\n    spotifyApi.getPlaylistTracks(playlist.id).then((data) => {\n      var userTracks = data.body.items.map(async (tracks) => {\n        //Return object with needed track info\n        var tagFunction = async () => {\n          return axios\n            .get(\n              \"http://ws.audioscrobbler.com/2.0/?method=track.gettoptags&artist=\" +\n                encodeURIComponent(tracks.track.album.artists[0].name) +\n                \"&track=\" +\n                encodeURIComponent(tracks.track.name) +\n                \"&autocorrect=1&api_key=205d2d20915ccacfdfd4e08c2a394872&format=json\"\n            )\n            .then((res) => {\n              return res.data.toptags.tag[0].name;\n            })\n            .catch((err) => {\n              return \"No tags found\";\n            });\n        };\n\n        var tagReturner = await tagFunction();\n\n        return {\n          name: tracks.track.name,\n          album: tracks.track.album.name,\n          artist: tracks.track.album.artists[0].name,\n          artistID: tracks.track.album.artists[0].id,\n          id: tracks.track.id,\n          tag: tagReturner,\n        };\n      });\n      Promise.all(userTracks).then((values) => {\n        getUserPlaylistTracks(values);\n      });\n    });\n  };\n\n  // Get counts for atrists, albums, and tags\n  useEffect(() => {\n    var tempArtistCounts = userPlaylistTracks.reduce(\n      (c, { artist: key }) => ((c[key] = (c[key] || 0) + 1), c),\n      {}\n    );\n\n    console.log(tempArtistCounts);\n    reconstructArtists(tempArtistCounts);\n\n    var tempAlbumCounts = userPlaylistTracks.reduce(\n      (c, { album: key }) => ((c[key] = (c[key] || 0) + 1), c),\n      {}\n    );\n\n    console.log(tempAlbumCounts);\n    reconstructAlbums(tempAlbumCounts);\n\n    var tempTagCounts = userPlaylistTracks.reduce(\n      (c, { tag: key }) => ((c[key] = (c[key] || 0) + 1), c),\n      {}\n    );\n\n    reconstructTags(tempTagCounts);\n    console.log(tempTagCounts);\n  }, [userPlaylistTracks]);\n\n  // Reconstruct to Nivo Chart format\n  const reconstructArtists = (object) => {\n    for (var [key, value] of Object.entries(object)) {\n      tempArtistArray.push({ id: key, value: value });\n    }\n    getArtistCounts(tempArtistArray);\n  };\n  const reconstructAlbums = (object) => {\n    for (var [key, value] of Object.entries(object)) {\n      tempAlbumsArray.push({ id: key, value: value });\n    }\n    getAlbumCounts(tempAlbumsArray);\n  };\n  const reconstructTags = (object) => {\n    for (var [key, value] of Object.entries(object)) {\n      tempTagsArray.push({ id: key, value: value });\n    }\n    getTagCounts(tempTagsArray);\n    console.log(tempTagsArray); //Undefined\n  };\n\n  return (\n    <div className=\"playlistCardContainer\">\n      <Card className=\"playlistContainer float-left\" onClick={trackMetadata}>\n        {playlist.name}\n        <div className=\"lightweight\">{playlist.trackNum} tracks</div>\n      </Card>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport useAuth from \"./useAuth\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport PlaylistList from \"./PlaylistList\";\nimport \"./Dashboard.css\";\nimport Analysis from \"./Analysis\";\n\nexport default function Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  const [playlistProps, getPlaylistProps] = useState([\"emptyarray\"]);\n  const [showHide, setShowHide] = useState(false);\n  localStorage.setItem(\"access\", accessToken);\n  const spotifyApi = new SpotifyWebApi({\n    clientId: \"a3296c7d32264744a2a198e3ef62a255\",\n  });\n  const [artistCounts, getArtistCounts] = useState([]);\n  const [albumCounts, getAlbumCounts] = useState([]);\n  const [tagCounts, getTagCounts] = useState([]);\n  const isInitialMount = useRef(true);\n\n  //Get Access Token\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n\n  //Get users playlists\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.getUserPlaylists().then((data) => {\n      getPlaylistProps(\n        data.body.items.map((playlist) => {\n          return {\n            name: playlist.name,\n            id: playlist.id,\n            url: playlist.href,\n            trackNum: playlist.tracks.total,\n          };\n        })\n      );\n    });\n  }, [accessToken]);\n\n  const toggleShowHide = () => {\n    setShowHide(true);\n  };\n\n  return (\n    <div className=\"parent\">\n      Select a playlist to analyze\n      {playlistProps.map((playlist) => (\n        <div className=\"listCard\" onClick={toggleShowHide}>\n          <PlaylistList\n            playlist={playlist}\n            key={playlist.id}\n            code={code}\n            getArtistCounts={getArtistCounts}\n            getAlbumCounts={getAlbumCounts}\n            getTagCounts={getTagCounts}\n            showHide={showHide}\n          />\n        </div>\n      ))}\n      {showHide ? (\n        <Analysis\n          artistCounts={artistCounts}\n          albumCounts={albumCounts}\n          tagCounts={tagCounts}\n        />\n      ) : null}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function useAuth(code) {\n  const [accessToken, setAccessToken] = useState();\n  const [refreshToken, setRefreshToken] = useState();\n  const [expiresIn, setExpiresIn] = useState();\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:3001/login\", {\n        code,\n      })\n      .then((res) => {\n        setAccessToken(res.data.accessToken);\n        setRefreshToken(res.data.refreshToken);\n        setExpiresIn(res.data.expiresIn);\n        window.history.pushState({}, null, \"/\");\n      });\n  }, [code]);\n\n  useEffect(() => {\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(() => {\n      axios\n        .post(\"http://localhost:3001/refresh\", {\n          refreshToken,\n        })\n        .then((res) => {\n          setAccessToken(res.data.accessToken);\n          setExpiresIn(res.data.expiresIn);\n        })\n        .catch(() => {\n          window.location = \"/\";\n        });\n    }, (expiresIn - 60) * 1000);\n\n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn]);\n\n  return accessToken;\n}\n","import { render } from \"@testing-library/react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Analysis from \"./Analysis\";\nimport Dashboard from \"./Dashboard\";\nimport Login from \"./landing\";\n\nconst code = new URLSearchParams(window.location.search).get(\"code\");\n\nfunction App() {\n  return code ? (\n    <>\n      <Dashboard code={code} />\n    </>\n  ) : (\n    <Login />\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Login from \"./landing\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}